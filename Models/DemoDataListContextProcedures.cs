// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using DemoAPIEB.Models;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace DemoAPIEB.Models
{
    public partial class DemoDataListContext
    {
        private IDemoDataListContextProcedures _procedures;

        public virtual IDemoDataListContextProcedures Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new DemoDataListContextProcedures(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public IDemoDataListContextProcedures GetProcedures()
        {
            return Procedures;
        }

        protected void OnModelCreatingGeneratedProcedures(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<usp_SelectByCompanyCodeResult>().HasNoKey().ToView(null);
        }
    }

    public partial class DemoDataListContextProcedures : IDemoDataListContextProcedures
    {
        private readonly DemoDataListContext _context;

        public DemoDataListContextProcedures(DemoDataListContext context)
        {
            _context = context;
        }

        public virtual async Task<int> usp_InsertDemoDataAsync(int? 出表日期, int? 資料年月, int? 公司代號, string 公司名稱, string 產業別, int? 營業收入_當月營收, int? 營業收入_上月營收, int? 營業收入_去年當月營收, double? 營業收入_上月比較增減, int? 營業收入_去年同月增減, int? 累計營業收入_當月累計營收, int? 累計營業收入_去年累計營收, double? 累計營業收入_前期比較增減, string 備註, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "出表日期",
                    Value = 出表日期 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "資料年月",
                    Value = 資料年月 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "公司代號",
                    Value = 公司代號 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "公司名稱",
                    Size = -1,
                    Value = 公司名稱 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.NVarChar,
                },
                new SqlParameter
                {
                    ParameterName = "產業別",
                    Size = 200,
                    Value = 產業別 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.NVarChar,
                },
                new SqlParameter
                {
                    ParameterName = "營業收入_當月營收",
                    Value = 營業收入_當月營收 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "營業收入_上月營收",
                    Value = 營業收入_上月營收 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "營業收入_去年當月營收",
                    Value = 營業收入_去年當月營收 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "營業收入_上月比較增減",
                    Value = 營業收入_上月比較增減 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Float,
                },
                new SqlParameter
                {
                    ParameterName = "營業收入_去年同月增減",
                    Value = 營業收入_去年同月增減 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "累計營業收入_當月累計營收",
                    Value = 累計營業收入_當月累計營收 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "累計營業收入_去年累計營收",
                    Value = 累計營業收入_去年累計營收 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "累計營業收入_前期比較增減",
                    Value = 累計營業收入_前期比較增減 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Float,
                },
                new SqlParameter
                {
                    ParameterName = "備註",
                    Size = -1,
                    Value = 備註 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.NVarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.Database.ExecuteSqlRawAsync("EXEC @returnValue = [dbo].[usp_InsertDemoData] @出表日期 = @出表日期, @資料年月 = @資料年月, @公司代號 = @公司代號, @公司名稱 = @公司名稱, @產業別 = @產業別, @營業收入_當月營收 = @營業收入_當月營收, @營業收入_上月營收 = @營業收入_上月營收, @營業收入_去年當月營收 = @營業收入_去年當月營收, @營業收入_上月比較增減 = @營業收入_上月比較增減, @營業收入_去年同月增減 = @營業收入_去年同月增減, @累計營業收入_當月累計營收 = @累計營業收入_當月累計營收, @累計營業收入_去年累計營收 = @累計營業收入_去年累計營收, @累計營業收入_前期比較增減 = @累計營業收入_前期比較增減, @備註 = @備註", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<List<usp_SelectByCompanyCodeResult>> usp_SelectByCompanyCodeAsync(int? 公司代號, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "公司代號",
                    Value = 公司代號 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<usp_SelectByCompanyCodeResult>("EXEC @returnValue = [dbo].[usp_SelectByCompanyCode] @公司代號 = @公司代號", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }
    }
}
